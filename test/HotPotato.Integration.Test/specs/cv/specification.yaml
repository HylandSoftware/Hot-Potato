openapi: 3.0.0

info:
  version: 1.0.0-draft5
  title: Combined Viewer Web API
  description: |-
    RESTful API for web access of Combined Viewer functionality.
  x-api-product:
    program: Integrations and Business Process Applications
    name: Combined Viewer
  x-releases:
    - label: Current (1.0.0-draft4)
      commit: 1afb7393fcb9a2edb2d8788580d3acf952f4a38f
      path: specs/cv/specification.yaml
servers:
  - url: '{server}/combined-viewer'
    variables:
      server:
        default: https://api.hyland.com
        description: This is the server being used to host the API in the current
          environment.

security:
  - Bearer: []

paths:
  /combined-view-types:
    get:
      operationId: getCombinedViewTypes
      summary: |-
        Get a list of Combined View Types.
      tags:
        - combined-view-type
      responses:
        200:
          description: |-
            A list of Combined View Types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedViewTypes'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for the Combined View Type list.
      description: |-
        The `OPTIONS` method is available to support `CORS` preflight requests.
      tags:
        - combined-view-type
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-view-types/{combinedViewTypeId}/search-keyword-types:
    get:
      operationId: getCombinedViewTypeSearchKeywordTypes
      summary: |-
        Get a collection of OnBase Keyword Types that are used for Combined View searching.
      tags:
        - combined-view-type
      parameters:
        - $ref: '#/components/parameters/combinedViewTypeId'
      responses:
        200:
          description: |-
            A list of Keyword Types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedViewTypeSearchKeywordTypes'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for Search Keyword Types.
      description: |-
        The `OPTIONS` method is available to support `CORS` preflight requests.
      tags:
        - combined-view-type
      parameters:
        - $ref: '#/components/parameters/combinedViewTypeId'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-views/{combinedViewTypeId}/filter-keyword-types:
    get:
      operationId: getCombinedViewTypeFilterKeywordTypes
      summary: |-
        Get a collection of OnBase Keyword Types that are used for filtering a Combined View.
      tags:
        - combined-view-type
      parameters:
        - $ref: '#/components/parameters/combinedViewTypeId'
      responses:
        200:
          description: |-
            A collection of Filter Keyword Types.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterKeywordTypes'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for Filter Keyword Types.
      description: |-
        The `OPTIONS` method is available to support `CORS` preflight requests.
      tags:
        - combined-view-type
      parameters:
        - $ref: '#/components/parameters/combinedViewTypeId'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-views/{combinedViewId}:
    get:
      operationId: getCombinedView
      summary: |-
        Get the specified Combined View.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
      responses:
        200:
          description: |-
            The specified Combined View.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CombinedView'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for the Combined View.
      description: |-
        The `OPTIONS` method is available to support `CORS` preflight requests.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-views/{combinedViewId}/filter-keyword-values:
    get:
      operationId: getCombinedViewFilterKeywordTypeValues
      summary: |-
        Get a collection of values available for a specific Filter Keyword Type.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
        - $ref: '#/components/parameters/keywordTypeIdInQuery'
      responses:
        200:
          description : |-
            A collection of values available for a specific Filter Keyword Type.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FilterKeywordValues'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for Filter Keyword Type Values.
      description: |-
        The `OPTIONS` method is available to support `CORS` preflight requests.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
        - $ref: '#/components/parameters/keywordTypeIdInQuery'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-views:
    post:
      operationId: createCombinedView
      summary: |-
        Create a Combined View based on the specified Combined View Type using the
        Search Terms and Combined View Type ID provided.
      tags:
        - combined-view
      requestBody:
        description: The Combined View Type ID and Search Terms associated with a particular Combined View.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CombinedViewParameters'
      responses:
        201:
          description: |-
            Created
          headers:
            Location:
              description: |-
                URL-identifier of the created resource.
              schema:
                type: string
        400:
          description: |-
            Combined View Parameters are malformed or invalid for the specified Combined View Type.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem-Detail'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        422:
          description: |-
            A Combined View with the given Combined View Parameters already exists.
          headers:
            Link:
              description: |-
                URL-identifier of the existing resource.
              schema:
                type: string
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem-Detail'
    options:
      summary: |-
        Options for Combined Views.
      description: |-
        The `OPTIONS` method is available to support `CORS` preflight requests.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-views/{combinedViewId}/title:
    get:
      operationId: getTitle
      summary: |-
        Retrieve the Title of the given Combined View.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
      responses:
        200:
          description: |-
            The Title text associated with the Combined View.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Title'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for a Combined View Title.
      description: |-
        The 'OPTIONS' method is available to support `CORS` preflight requests.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
  /combined-views/{combinedViewId}/tabs:
    get:
      operationId: getTabs
      summary: |-
        Retrieve the Custom Query Tabs associated with the given Combined View.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
      responses:
        200:
          description: |-
            The Custom Query Tabs associated with the given Combined View.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tabs'
        401:
          $ref: '#/components/responses/Unauthorized-401'
        404:
          $ref: '#/components/responses/NotFound-404'
    options:
      summary: |-
        Options for Combined View Tabs
      description: |-
        The 'OPTIONS' method is available to support `CORS` preflight requests.
      tags:
        - combined-view
      parameters:
        - $ref: '#/components/parameters/combinedViewId'
        - $ref: '#/components/parameters/Origin'
        - $ref: '#/components/parameters/Access-Control-Request-Method'
        - $ref: '#/components/parameters/Access-Control-Request-Headers'
      responses:
        200:
          $ref: '#/components/responses/OPTIONS-CORS-200'
        400:
          $ref: '#/components/responses/OPTIONS-CORS-400'
components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
  schemas:
    CombinedViewTypeSearchKeywordType:
        description: |-
          Combined View Type Search Keyword Type metadata.
        properties:
          keywordTypeId:
            description: |-
              The unique identifier of the Keyword Type.
            type: string
    CombinedViewTypeSearchKeywordTypes:
      description: |-
        A collection of Combined View Type Search Keyword Types.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CombinedViewTypeSearchKeywordType'
          readOnly: true
    SearchTerms:
      description: |-
        Search Terms used for searching and filtering Combined Views.
      required:
        - keywords
      properties:
        keywords:
          description: |-
            An array of OnBase keyword identifiers and their values.
          type: array
          items:
            $ref: '#/components/schemas/Keyword'
    Keyword:
      description: |-
        A Keyword Value and information about the related Keyword Type.
      required:
        - id
        - value
      properties:
        typeId:
          description: |-
            The unique identifier for the Keyword Type.
          type: string
        value:
          description: |-

            The keyword value. Keyword values are represented as strings.
            Depending on the underlying keyword type datatype, the specific
            format of the underlying string adheres to the following formatting
            rules.

            Values are normalized and locale specific formatting is not applied.
            Formatting to a specific currency is not applied. Consumers can
            apply this formatting through libraries and client locale
            preferences. Determining data type or currency format
            is retrieved from other metadata resources.

            <table>
              <tr>
                <th>Data Type</th> <th>Format</th> <th>Example</th>
              </tr> <tr>
                <td>Numeric9</td> <td>A whole positive number up to 9 digits, or
                negative number up to 8 digits without commas.</td>
                <td>123456789 <br /> -12345678</td>
              </tr> <tr>
                <td>Numeric20</td> <td>A whole number up to 20 digits without
                commas, or a negative number with 19 digits without commas.</td>
                <td>12345678901234567890 <br /> -1234567890123456789</td>
              </tr> <tr>
                <td>AlphaNumeric</td> <td>A string value.</td> <td>ABC 123</td>
              </tr> <tr>
                <td>Currency</td> <td>Positive or negative numeric value with a
                whole number and decimal portion separated by a period.</td>
                <td>123456.00</td>
              </tr> <tr>
                <td>SpecificCurrency</td> <td>Positive or negative numeric value
                with a whole number and decimal portion separated by a
                period.</td> <td>123456.00</td>
              </tr> <tr>
                <td>Date</td> <td><a
                href="https://en.wikipedia.org/wiki/ISO_8601">ISO-8601
                Date</a></td> <td>2018-02-21</td>
              </tr> <tr>
                <td>DateTime</td> <td><a
                href="https://en.wikipedia.org/wiki/ISO_8601">ISO-8601 Date and
                time without time zone.</td> <td>2018-02-21T21:17:28</td>
              </tr> <tr>
                <td>FloatingPoint</td> <td>Positive or negative numeric value
                with a whole number and decimal portion separated by a
                period.</td> <td>123456.091231</td>
              </tr>
            </table>
          type: string
    CombinedView:
      description: |-
        A Combined View based on a Combined View Type.
      required:
        - id
        - combinedViewTypeId
        - searchTerms
      properties:
        id:
          description: The unique identifier of the Combined View.
          type: string
          readOnly: true
        combinedViewTypeId:
          description: |-
            The unique identifier of the Combined View Type that the
            Combined View represents.
          type: string
          readOnly: true
        searchTerms:
          description: |-
            The Search Terms that define the Combined View.
          type: object
          properties:
            keywords:
              description: |-
                An array of OnBase keyword identifiers and their values.
              type: array
              items:
                $ref: '#/components/schemas/Keyword'
          readOnly: true
    CombinedViews:
      description: |-
        A collection of Combined Views.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CombinedView'
          readOnly: true
    FilterKeywordType:
      description: |-
        A keyword type that is used for filtering a Combined View.
      required:
        - keywordTypeId
      properties:
        keywordTypeId:
          description: |-
            The identifier of an OnBase keyword type.
          type: string
          readOnly: true
    FilterKeywordTypes:
      description: |-
        A collection of Filter Keyword Types.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FilterKeywordType'
          readOnly: true
    FilterKeywordValue:
      description: |-
        The value of a filter keyword.
      required:
        - value
      properties:
        value:
          type: string
          readOnly: true
        count:
          description: |-
            The number of items that match against the filter value.
          type: integer
          format: int32
          readOnly: true
    FilterKeywordValues:
      description: |-
        A collection of Filter Keyword Values.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/FilterKeywordValue'
          readOnly: true
    Title:
      description: |-
        The Combined View title.
      required:
        - text
      properties:
        text:
          type: string
    Tab:
      description: |-
        Combined View Tab metadata.
      required:
        - id
        - combinedViewTypeId
        - name
        - hexColor
        - sequence
        - typeId
        - iconId
      properties:
        id:
          description: The unique identifier of the Tab.
          type: string
        combinedViewTypeId:
          description: The Combined View Type that this Tab is associated with.
          type: string
        name:
          description: The name of this Tab
          type: string
        hexColor:
          description: The color used for this tab's frosted tip, in hexadecimal.
          type: string
        sequence:
          description: The position of the tab in the list.
          type: integer
          format: int64
        typeId:
          description: The type of this Tab.
          type: string
        iconId:
          description: The unique identifier of the icon associated with this tab, equivalent to a Document ID.
          type: string
    Tabs:
      description: |-
        A collection of Tabs.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Tab'
          readOnly: true
    CombinedViewParameters:
      description: |-
        Parameters used for creating a new Combined View.
      required:
        - combinedViewTypeId
        - searchTerms
      properties:
        combinedViewTypeId:
          description: The unique identifier of the related Combined View Type.
          type: string
        searchTerms:
          $ref: '#/components/schemas/SearchTerms'
    CombinedViewType:
      description: |-
        Combined View Type metadata.
      required:
        - id
        - name
      properties:
        id:
          description: The unique identifier of the Combined View Type.
          type: string
        name:
          description: The name of the Combined View Type
          type: string
    CombinedViewTypes:
      description: |-
        A collection of Combined View Types.
      required:
        - items
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/CombinedViewType'
          readOnly: true
    Problem-Detail:
      type: object
      description: |-
        The <a href="https://tools.ietf.org/html/rfc7807">Problem Detail</a>
        format defines a way to carry machine-readable details of errors in a
        HTTP response to avoid the need to define new error response formats for
        HTTP APIs.

        Problem details can be extended and defined for specific
        problem types.
      properties:
        type:
          type: string
          format: uri
          description: |-
            An absolute URI that identifies the problem type.  When
            dereferenced, it should provide human-readable documentation
            for the problem type (e.g., using HTML).
          example: https://example.net/validation_error
        title:
          type: string
          description: |-
            A short, human-readable summary of the problem type. It should
            not change from occurrence to occurrence of the problem.
          example: Your request parameters didn't validate.
        status:
          type: integer
          format: int32
          description: |-
            The HTTP status code generated by the origin server for this
            occurrence of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
          example: 400
        detail:
          type: string
          description: |-
            A human readable explanation specific to this occurrence of the
            problem.
          example: The parameter `count` was not valid for the request.
        instance:
          type: string
          format: uri
          description: |-
            A URI reference that identifies the specific occurrence of
            the problem.  It may or may not yield further information
            if dereferenced.
          example: /example-resource
  parameters:
    combinedViewTypeId:
      name: combinedViewTypeId
      in: path
      description: |-
        The unique Combined View Type identifier.
      required: true
      schema:
        type: string
    combinedViewId:
      name: combinedViewId
      in: path
      description: |-
        The unique Combined View identifier.
      required: true
      schema:
        type: string
    iconId:
      name: iconId
      in: path
      description: |-
        The unique Icon identifier.
      required: true
      schema:
        type: string
    keywordTypeId:
      name: keywordTypeId
      in: path
      description: |-
        The unique Keyword Type identifier.
      required: true
      schema:
        type: string
    keywordTypeIdInQuery:
      name: keywordTypeId
      in: query
      description: |-
        The unique Keyword Type identifier.
      required: true
      schema:
        type: string
    Origin:
      name: Origin
      in: header
      description: |-
        The <a href="https://tools.ietf.org/html/rfc6454#section-7">Origin</a>
        request header indicates which origin(s) a request originated from.
        Origin only includes the server name and no path information.
      required: false
      schema:
        type: string
      example: 'Origin: https://example.net'
    Access-Control-Request-Method:
      name: Access-Control-Request-Method
      in: header
      description: |-
        The <a
        href="https://fetch.spec.whatwg.org/#http-access-control-request-method">Access-Control-Request-Method</a>
        request header is used when issuing a `CORS` preflight request to let
        the server know which HTTP method will be used when the actual request
        is made.
      required: false
      schema:
        type: string
      example: 'Access-Control-Request-Method: GET'
    Access-Control-Request-Headers:
      name: Access-Control-Request-Headers
      in: header
      description: |-
        The <a
        href="https://fetch.spec.whatwg.org/#http-access-control-request-headers">Access-Control-Request-Headers</a>
        request header is used when issuing a `CORS` preflight request to let
        the server know which HTTP headers will be used when the actual request
        is made.
      required: false
      schema:
        type: string
      example: 'Access-Control-Request-Headers: Range'

  headers:
    Access-Control-Allow-Origin:
      description: |-
        The Access-Control-Allow-Origin response header is returned after a
        successful `CORS` preflight request to indicate whether the target
        resource can be shared with the given `Origin`.
        Reference: https://fetch.spec.whatwg.org/#http-access-control-allow-origin
      schema:
        type: string
      example: 'Access-Control-Allow-Origin: https://example.net'
    Access-Control-Max-Age:
      description: |-
        The Access-Control-Max-Age response header indicates how long in seconds
        the results of a `CORS` preflight request can be cached.
        Reference: https://fetch.spec.whatwg.org/#http-access-control-max-age
      schema:
        type: string
      example: 'Access-Control-Max-Age: 600'

  responses:
    OPTIONS-CORS-200:
      description: |-
        The `OPTIONS` supplied in the CORS request is allowed.
      headers:
        Access-Control-Allow-Origin:
          $ref: '#/components/headers/Access-Control-Allow-Origin'
        Access-Control-Max-Age:
          $ref: '#/components/headers/Access-Control-Max-Age'
    OPTIONS-CORS-400:
      description: |-
        The `OPTIONS` supplied in the CORS request is not allowed.
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Problem-Detail'
          example: |-
            {
              "type": "https://example.net/bad-request",
              "title": "Bad Request",
              "status": 400,
              "detail": "The method 'POST' is not allowed.",
              "instance": "/content"
            }
    Unauthorized-401:
          description: |-
            Response for content when the user does not supply
            authorization credentials.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem-Detail'
              example: |-
                {
                  "type": "https://example.net/unauthorized",
                  "title": "Unauthorized",
                  "status": 401,
                  "detail": "The requested resource requires authorization.",
                  "instance": "/content"
                }
    NotFound-404:
          description: |-
            Response for content when the resource does not exist,
            or the user does not have rights to access to the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem-Detail'
              example: |-
                {
                  "type": "https://example.net/notfound",
                  "title": "Resource not found",
                  "status": 404,
                  "detail": "The requested resource could not be found.",
                  "instance": "/content"
                }
