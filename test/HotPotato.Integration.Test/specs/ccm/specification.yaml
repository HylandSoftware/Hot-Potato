openapi: 3.0.0

info:
  title: Hyland SMS
  version: 1.0.0-draft1
  x-api-product:
    program: Solution Building and CCM
    name: SMS
  x-releases:
    - label: Current (1.0.0-draft1)
      commit: 72e6f6e4a4dacc4af8730d4f0772ac3a233ad859
      path: specs/ccm/specification.yaml

servers:
  - url: '{server}/sms'
    variables:
      server:
        default: https://api.hyland.com #or whatever...
        description: This is the server being used to host the API in the current
          environment.

security:
  - Bearer: []

paths:
  /accounts:
    get:
      operationId: listAccounts
      summary: Returns a list of accounts
      description: Lists all of the accounts that are available to the current
        user
      tags:
        - Accounts
      responses:
        '200':
          description: A JSON Array of accounts
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Accounts'
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SmsError'

    post:
      operationId: createAccount
      summary: Create a new account
      description: Creates a new account object.  Users may choose to use
        multiple accounts for different business functions.  The account object
        must not contain an id.  Use PUT /accounts/{accountId} to update
        accounts.
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '201':
          description: Created
          headers:
            Location:
              schema:
                type: string
              description: Absolute URI of the newly created object.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsError'


  /accounts/{accountId}:
    parameters:
      - in: path
        name: accountId
        schema:
          type: string
        required: true
        description: Unique id of the Account
    get:
      operationId: getAccount
      summary: Returns the account
      description: Returns the account with the specified id.
      tags:
        - Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
        '403':
          description: Forbidden
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
        '404':
          description: An account with the specified id was not found.
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
    put:
      operationId: updateAccount
      summary: Edit an existing account
      description: Edit an existing account.
      tags:
        - Accounts
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SmsError'
        '403':
          description: Forbidden
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
        '404':
          description: An account with the specified id was not found.
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'

  /messages:
    parameters:
      - in: query
        name: accountId
        schema:
          type: string
        required: true
        description: Account id we're looking for
    get:
      operationId: listMessages
      summary: Returns a list of messages tied to this account
      description: Returns all messages sent or retrieved by this account.
        WIP - This method will be updated to include paging and search parameters
        before release.
      tags:
        - Messages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Messages'
        '403':
          description: Forbidden
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
        '404':
          description: An account with the specified id was not found.
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
    post:
      operationId: sendMessage
      summary: Send a message from this account
      description: Send a message from this account.  In order to be notified
        of status updates, set the 'statusCallback' parameter of the message.
      tags:
        - Messages
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Message'
      callbacks:
        statusUpdate:
          '{$request.body#/statusCallback}':
            post:
              summary: This will be called whenever the status changes
              tags:
                - Messages
              requestBody:
                required: true
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Message'
              responses:
                '200':
                  description: The server accepted the callback
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Forbidden
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
  /messages/{messageId}:
    parameters:
      - in: path
        name: messageId
        schema:
          type: string
        required: true
        description: Unique identifier of the message
    get:
      operationId: getMessage
      summary: Retrieve a message
      description: Retrieve a message
      tags:
        - Messages
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '403':
          description: Forbidden
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
        '404':
          description: 'Message with the specified id was not found for that
          account'
          content:
              application/problem+json:
                schema:
                  $ref: '#/components/schemas/SmsError'
  /callbacks/twilio:
    post:
      operationId: twilioStatusUpdate
      summary: Report a change in message status.
      description: This endpoint must not be called by clients; it is called
        when the SMS provider 'Twilio' submits message status updates to the
        SMS Service
      tags:
        - Callbacks
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TwilioUpdate'
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/SmsError'


components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
  schemas:
    Account:
      description: An account is created to register an SMS Provider account
        for use by the SMS Service
      properties:
        id:
          type: string
          readOnly: true
          description: The unique identifier for accounts.  Must be included
            for all updates
        name:
          type: string
          description: A user supplied name for the account
        type:
          type: string
          enum: [twilio]
        providerId:
          type: string
          description: The ID for the corresponding SMS Provider account
        acctSecret:
          type: string
          description: The account secret can be supplied when creating and
            updating accounts, but is never included when accounts are retrieved.
          writeOnly: true

    Accounts:
      description: A collection of Account objects
      type: array
      items:
        $ref: '#/components/schemas/Account'

    Message:
      description: The SMS Service representation of a message.
      properties:
        id:
          description: The unique ID for the message
          type: string
          readOnly: true
        created:
          description: The date and time that the message was received by the
            SMS service.
          type: string
          format: date-time
        modified:
          description: The date and time of the most recent change to any
            property of the message
          type: string
          format: date-time
        sent:
          description: The date and time that the message was delivered to an
            SMS Provider
          type: string
          format: date-time
        accountId:
          description: The unique ID of the account for this message
          type: integer
        from:
          description: The phone number used to send this message
          type: string
          format: E.164
        to:
          description: The phone number to which this message was sent.
          type: string
          format: E.164
        body:
          description: The text content of the message
          type: string
        status:
          description: The delivery status of the message
          type: string
          readOnly: true
          enum: [accepted, sending, sent, receiving, received, delivered,undelivered, failed]
        errorCode:
          type: integer
          readOnly: true
        errorMessage:
          type: string
          readOnly: true
        direction:
          type: string
          enum: [inbound, outbound]
          readOnly: true
        statusCallback:
          type: string
    Messages:
      type: array
      items:
        $ref: '#/components/schemas/Message'

    SmsError:
      properties:
        type:
          type: string
        title:
          type: string
        status:
          type: integer
        detail:
          type: string
        instance:
          type: string

    TwilioUpdate:
      type: object
      required:
          - MessageSid
          - AccountSid
          - From
      properties:
        MessageSid:
          type: string
          description: A 34 character unique identifier for the message.
        AccountSid:
          type: string
          description: The 34 character id of the Account this message is
            associated with.
        MessagingServiceSid:
          type: string
          description: The 34 character id of the Messaging Service associated
           with the message.
        From:
          type: string
          description: The phone number or Channel address that sent this message.
        To:
          type: string
          description: The phone number or Channel address of the recipient.
        Body:
          type: string
          description: The text body of the message. Up to 1600 characters long.
        NumMedia:
          type: string
          description: The number of media items associated with your message
        MessageStatus:
          type: string
          description: The status of the message. Message delivery information is
            reflected in message status.
        ErrorCode:
          type: integer
          description: The error code (if any) associated with your message. If
            your message status is failed or undelivered, the ErrorCode can give you
            more information about the failure. If the message was delivered
            successfully, no ErrorCode will be present.
